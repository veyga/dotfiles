{
  "diagnostic.showUnused": false,
  "coc.preferences.formatOnType": false,
  "codeLens.enable": false,
  "bashIde.formatting.provider": "shfmt",
  "bashIde.formatting.shfmtArgs": ["-w"],
  "sh.formatting.provider": "shfmt",
  "clangd.inlayHints.enable": false,
  // "python.analysis.diagnosticMode": "openFilesOnly",
  "pyright.enable": true,
  "python.analysis.diagnosticMode": "all",
  // "python.analysis.stubPath": "typings",
  // "python.pythonPath": "~/.pyenv/shims/python",
  // "python.venvPath": "$POETRY_VENV_HOME",
  // use in coc-pyright
  "python.formatting.provider": "ruff",
  "python.linting.ruffEnabled": true,
  "python.linting.ruffArgs": ["--config", "~/Dev/python/funstruct/pyproject.toml"],
  "python.linting.mypyEnabled": true,
  "python.linting.mypyArgs": [
      "--enable-incomplete-feature=NewGenericSyntax"
    ]
  ,
  // used in coc-ruff/coc-mypy
  "mypy-type-checker.args": [
    "--config-file=pyproject.toml",
    "--enable-incomplete-feature=NewGenericSyntax"

  ],
  // "python.linting.pyrightEnabled": false,
  // "python.linting.mypyArgs": ["--config", "~/Dev/python/funstruct/pyproject.toml"],
  // "python.linting.enabled": true,
  // "python.formatting.provider": "black",                      
  // "python.formatting.blackPath": "~/.pyenv/shims/black",      
  // "python.formatting.blackArgs": ["--target-version", "py312"],
  // "pyright.trace.server": "verbose",
  // "pyright.disableProgressNotifications": true,
  // "pyright.organizeimports.provider": "pyright",
  "inlayHint.enable": false,
  "tsserver.tsconfigpath": "./tsconfig.json",
  "prettier.configPath": "./.prettierrc",
  "eslint.options": {
    "overrideConfigFile": "./.eslintrc.js"
  },
  "eslint.run": "onSave",
  // "tsserver.enableJavascript": true,
  // "tsserver.trace.server": "verbose",
  // "tsserver.log": "normal",
  // "tsserver.reportStyleChecksAsWarnings": true,
  // "javascript.referencesCodeLens.enable": false,
  // "javascript.showUnused": false,
  // "javascript.suggest.autoImports": true,
  // "javascript.suggest.enabled": true,
  // "javascript.suggestionActions.enabled": true,
  // "typescript.referencesCodeLens.enable": false,
  // "typescript.format.enabled": true,
  // "typescript.format.provider": "prettier",
  // "typescript.suggestionActions.enabled": true,
  // "eslint.format.enable": false,
  // "eslint.run": "onSave",
  // "eslint.codeAction.showDocumentation": {
  //   "enable": true
  // },
  // "prettier.trailingComma": "es5",
  // "prettier.semi": false,
  // "prettier.proseWrap": "always",
  // "prettier.printWidth": 100,
  // "prettier.bracketSpacing": true,
  "coc.preferences.formatOnSaveFiletypes": [],
  "yaml.schemas": {
    "kubernetes": "*.yaml"
  },
  "json.schemaDownload.enable": {
    "type": "boolean",
    "default": true,
    "description": "When enabled, JSON schemas can be fetched from http and https locations.",
    "tags": ["usesOnlineServices"]
  },
  "json.schemas": {
    "type": "array",
    "scope": "resource",
    "description": "Schemas associations for json files",
    "default": [],
    "items": {
      "type": "object",
      "default": {
        "fileMatch": ["/my-file"],
        "url": "schemaURL"
      },
      "properties": {
        "url": {
          "type": "string",
          "default": "/user.schema.json"
        },
        "fileMatch": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "MyFile.json"
          },
          "minItems": 1,
          "description": "File pattern to match."
        },
        "schema": {
          "$ref": "http://json-schema.org/draft-07/schema#",
          "description": "Url of json schema, support file/url protocol."
        }
      }
    }
  },
  "diagnostic-languageserver.formatFiletypes": {
    // format `sh` (includes `bash`) files using formatter defined below
    "sh": "shfmt"
  },
  "languageserver": {
    "terraform": {
      "command": "terraform-ls",
      "args": ["serve"],
      "filetypes": ["terraform", "tf", "hcl"],
      "initializationOptions": {},
      "settings": {}
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": ["--lsp"],
      "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
      "filetypes": ["haskell", "lhaskell"]
    }
  },
  // "java.import.gradle.java.home": "/Users/andrew.stefanich/.sdkman/candidates/java/11.0.12-zulu"
}
